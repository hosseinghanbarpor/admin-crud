<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use Illuminate\Http\Request;
use App\Http\Requests\Store{{ model }};
use App\Http\Requests\Update{{ model }};
use App\Http\Resources\{{ model }} as {{ model }}Resource;
use DataTables;

class {{ class }} extends Controller
{
    public function __construct()
    {
        $this->authorizeResource({{ model }}::class);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Contracts\View\View
     */
    public function index()
    {

       if ($request->ajax()) {
            $data = {{ model }}::select('*');
            return Datatables::of($data)
                ->addIndexColumn()
                ->addColumn('actions', function($row){
                    $editUrl = route('articleCategories.edit', $row->id);
                    $deleteUrl = route('articleCategories.destroy', $row->id);

                    return view('partial.dataTableActions', compact('editUrl', 'deleteUrl'));
                })
                ->make(true);
        }


        $breadcrumbs = [['link' => "/", 'name' => "Home"], ['link' => "javascript:void(0)", 'name' => "{{ model }}"], ['name' => "{{ model }} List"]];

        return view('dashboard.{{ system }}.{{ model }}.index', ['breadcrumbs' => $breadcrumbs ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Contracts\View\View
     */
    public function create()
    {
       $breadcrumbs = [['link' => "/", 'name' => "Home"], ['link' => "javascript:void(0)", 'name' => "{{ model }}"], ['name' => "Create {{ model }}"]];

        return view('dashboard.{{ system }}.{{ model }}.create' , ['breadcrumbs' => $breadcrumbs] );
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Contracts\View\View
     */
   public function store(Store{{ model }} $request)
    {
        {{ model }}::create($request->all());
        return redirect()->route('{{ modelVariable }}s.index');
    }


    /**
     * Display the specified resource.
     *
     * @param  model
     * @return \Illuminate\Contracts\View\View
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        $breadcrumbs = [['link' => "/", 'name' => "Home"], ['link' => "javascript:void(0)", 'name' => "{{ model }}"], ['name' => "Show {{ model }}"]];

        return view('dashboard.{{ system }}.{{ model }}.show', ['{{ modelVariable }}' => ${{ modelVariable }}, 'breadcrumbs' => $breadcrumbs]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  model
     * @return \Illuminate\Contracts\View\View
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        $breadcrumbs = [['link' => "/", 'name' => "Home"], ['link' => "javascript:void(0)", 'name' => "{{ model }}"], ['name' => "Edit {{ model }}"]];

        return view('dashboard.{{ system }}.{{ model }}.edit', ['{{ modelVariable }}' => ${{ modelVariable }} , 'breadcrumbs' => $breadcrumbs]);
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Update{{ model }} $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->update($request->all());

        return redirect()->route('{{ modelVariable }}s.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\RedirectResponse
     * @throws \Exception
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return redirect()->route('{{ modelVariable }}s.index');
    }

}
