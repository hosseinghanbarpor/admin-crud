<?php

namespace {{ namespace }};

use Illuminate\Auth\Access\HandlesAuthorization;
use {{ namespacedModel }};
use App\Models\User;

class {{ class }}
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     *
     * @param  \{{ namespacedUserModel }}  $user
     * @return mixed
     */
    public function viewAny(User $user)
    {
        if ($user->can('view {{ model }}')) {
            return true;
        }
    }

    /**
     * Determine whether the user can view the model.
     *
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return mixed
     */
    public function view(User $user, {{ model }} ${{ modelVariable }})
    {
        if ($user->can('view {{ model }}')) {
            return true;
        }
    }

    /**
     * Determine whether the user can create models.
     *
     * @param  \{{ namespacedUserModel }}  $user
     * @return mixed
     */
    public function create(User $user)
    {
        if ($user->can('create {{ model }}')) {
            return true;
        }
    }

    /**
     * Determine whether the user can update the model.
     *
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return mixed
     */
    public function update(User $user, {{ model }} ${{ modelVariable }})
    {
        if ($user->can('edit {{ model }}')) {
            return true;
        }
    }

    /**
     * Determine whether the user can delete the model.
     *
     * @param  \{{ namespacedUserModel }}  $user
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return mixed
     */
    public function delete(User $user, {{ model }} ${{ modelVariable }})
    {
        if ($user->can('delete {{ model }}')) {
            return true;
        }
    }
}
